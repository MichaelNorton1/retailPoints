{"version":3,"sources":["state-functions/checkMonths/checkMonths.js","state-functions/formatData/formatData.js","data/customers.js","state-functions/pointCalculator/pointCalculator.js","state-functions/addTransaction/addTransactions.js","components/modal/monthlyPoints/monthlyPoints.js","components/modal/Modal.jsx","components/rows/Rows.jsx","components/table/Table.jsx","state-functions/getCustomers/getCustomers.js","App.jsx","reportWebVitals.js","index.js"],"names":["checkMonths","tableData","threeMonthsAgo","moment","subtract","transactions","filter","transaction","Date","date","_d","formatData","finalUsers","finalArr","each","push","name","id","data","amountSpent","pointCalculator","trans","points","Math","floor","addTransactions","threeMonths","months","forEach","month","split","undefined","totalPoints","total","monthlyPoints","transactionHistory","monthlyCount","Object","keys","map","i","style","border","margin","padding","Modal","setStyle","createPortal","className","key","onClick","document","getElementById","Rows","customers","useState","setTransactionHistory","customer","length","openModal","Table","getCustomers","Promise","res","rej","App","setCustomers","useEffect","console","log","then","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sRAYeA,EAXK,SAACC,GACnB,IAAMC,EAAiBC,MAASC,SAAS,EAAG,UAO5C,OANyBH,EAAUI,aAAaC,QAAO,SAACC,GAGtD,OAFwB,IAAIC,KAAKD,EAAYE,MAEpBP,EAAeQ,OCO7BC,EAbI,SAACC,GAClB,IAAIC,EAAW,GACf,IAAK,IAAIC,KAAQF,EACfC,EAASE,KAAK,CACZC,KAAMJ,EAAWE,GAAME,KACvBC,GAAIH,EACJI,KAAMN,EAAWE,KAIrB,OAAOD,GCiBMZ,EA3BG,CAChBI,aAAc,CACZ,CAAEW,KAAM,OAAQC,GAAI,EAAGR,KAAM,aAAcU,YAAa,KACxD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,YAAaU,YAAa,IACvD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,aAAcU,YAAa,KACxD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,aAAcU,YAAa,KACxD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,YAAaU,YAAa,KACvD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,YAAaU,YAAa,KACvD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,YAAaU,YAAa,IACvD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,aAAcU,YAAa,IACxD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,aAAcU,YAAa,KACxD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,aAAcU,YAAa,IACxD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,aAAcU,YAAa,IACxD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,aAAcU,YAAa,IACxD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,YAAaU,YAAa,IACvD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,YAAaU,YAAa,KACvD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,YAAaU,YAAa,QACvD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,YAAaU,YAAa,IACvD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,aAAcU,YAAa,IACxD,CAAEH,KAAM,OAAQC,GAAI,EAAGR,KAAM,aAAcU,YAAa,IACxD,CAAEH,KAAM,MAAOC,GAAI,EAAGR,KAAM,aAAcU,YAAa,IACvD,CAAEH,KAAM,MAAOC,GAAI,EAAGR,KAAM,aAAcU,YAAa,IACvD,CAAEH,KAAM,MAAOC,GAAI,EAAGR,KAAM,aAAcU,YAAa,IACvD,CAAEH,KAAM,MAAOC,GAAI,EAAGR,KAAM,aAAcU,YAAa,OCX5CC,EAZS,SAACC,GACvB,IAAIC,EAAS,EACb,GAAID,EAAQ,IAAMA,EAAQ,IACxBC,GAAUD,EAAQ,OACb,MAAIA,EAAQ,KAGjB,OAAO,EAFPC,EAAyB,GAAfD,EAAQ,KAAW,GAK/B,OAAOE,KAAKC,MAAMF,ICmCLG,EA3CS,SAACC,GACvB,IAAMC,EAAS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEEf,EAAa,GAyBjB,OAxBAc,EAAYE,SAAQ,SAACrB,GACnBA,EAAW,OAAaa,EAAgBb,EAAYY,aACpD,IAAIU,EAAQtB,EAAYE,KAAKqB,MAAM,KAAK,GACpCb,EAAKV,EAAYU,QAEEc,IAAnBnB,EAAWK,IACbL,EAAWK,GAAIZ,aAAaU,KAAK,CAC/Bc,MAAOF,EAAOE,EAAQ,GACtBP,OAAQf,EAAYe,SAEtBV,EAAWK,GAAIe,aAAezB,EAAYe,OAC1CV,EAAWK,GAAIgB,MAAMlB,KAAKR,IAE1BK,EAAWL,EAAYU,IAAM,CAC3BD,KAAMT,EAAYS,KAClBgB,YAAazB,EAAYe,OACzBjB,aAAc,CACZ,CAAEwB,MAAOF,EAAOE,EAAQ,GAAIP,OAAQf,EAAYe,SAElDW,MAAO,CAAC1B,OAKPK,G,eCvBMsB,EAnBO,SAACC,GACrB,IAAIC,EAAe,GASnB,OARAD,EAAmBjB,KAAKb,aAAauB,SAAQ,SAACC,QACVE,IAA9BK,EAAaP,EAAMA,OACrBO,EAAaP,EAAMA,OAASA,EAAMP,OAElCc,EAAaP,EAAMA,QAAUA,EAAMP,UAIhCe,OAAOC,KAAKF,GAAcG,KAAI,SAACV,EAAOW,GAC3C,OACE,qBACEC,MAAO,CAAEC,OAAQ,YAAaC,OAAQ,MAAOC,QAAS,OADxD,mBAEKf,EAFL,aAEeO,EAAaP,GAF5B,iBCiCSgB,EA1CD,SAAC,GAA6C,IAA3CV,EAA0C,EAA1CA,mBAAoBM,EAAsB,EAAtBA,MAAOK,EAAe,EAAfA,SAK1C,GAAc,WAAVL,EACF,OAAO,KAGT,IAAMd,EAASO,EAAcC,GAE7B,OAAOY,uBACL,qCACE,qBAAKC,UAAU,SACf,qBAAKA,UAAWP,EAAhB,SACE,sBAAKO,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAf,SACE,oBAAIA,UAAU,QAAd,SAAuBb,EAAmBnB,SAE5C,sBAAKgC,UAAU,OAAf,qBAA+BrB,KAC/B,kDACCQ,EAAmBjB,KAAKe,MAAMM,KAAI,SAACzB,EAAMmC,GACxC,OACE,qBAEED,UAAU,OAFZ,4BAGclC,EAAKK,YAHnB,mBAGyCL,EAAKL,KAH9C,qBAG+DK,EAAKQ,SAF7D2B,MAMX,qBAAKD,UAAU,SAAf,SACE,wBAAQA,UAAU,UAAUE,QAAS,WA7B7CJ,EAAS,WA6BD,6BAORK,SAASC,eAAe,YCLbC,G,MAjCF,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACd,EAAoDC,mBAAS,MAA7D,mBAAOpB,EAAP,KAA2BqB,EAA3B,KACA,EAA0BD,mBAAS,UAAnC,mBAAOd,EAAP,KAAcK,EAAd,KAOA,OACE,kCACE,cAAC,EAAD,CACEA,SAAUA,EACVL,MAAOA,EACPN,mBAAoBA,IAErBmB,EAAUf,KAAI,SAACkB,GACd,OACE,qBAAsBT,UAAU,OAAhC,UACE,oBAAIA,UAAU,OAAd,SAAsBS,EAASzC,OAC/B,qBAAIgC,UAAU,OAAd,UACGS,EAASvC,KAAKb,aAAaqD,OAD9B,IACuC,KACrC,wBAAQR,QAAS,kBAlBX,SAACO,GACjBD,EAAsBC,GAEtBX,EAAS,SAewBa,CAAUF,IAAjC,2BAGF,oBAAIT,UAAU,YAAd,SAA2BS,EAASvC,KAAKc,gBAPlCyB,EAASxC,YCAb2C,G,MAnBD,SAAC,GAAmB,IAAjBN,EAAgB,EAAhBA,UACf,OACE,qCACE,wBAAON,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,UAAd,kBAEA,oBAAIA,UAAU,UAAd,oCACA,oBAAIA,UAAU,UAAd,gCAIJ,cAAC,EAAD,CAAMM,UAAWA,OACV,SCXAO,EALM,SAAC5D,GACpB,OAAO,IAAI6D,SAAQ,SAACC,EAAKC,GACvBD,EAAI9D,OCgCOgE,MAzBf,WACE,MAAkCV,mBAAS,IAA3C,mBAAOD,EAAP,KAAkBY,EAAlB,KAeA,OAbAC,qBAAU,WACRC,QAAQC,IAAI,OAEZR,EAAa5D,GACVqE,MAAK,SAACP,GAAD,OAAS/D,EAAY+D,MAC1BO,MAAK,SAAC5C,GAAD,OAAiBD,EAAgBC,MACtC4C,MAAK,SAAC1D,GACL,IAAMM,EAAOP,EAAWC,GAExBsD,EAAahD,MAEjBkD,QAAQC,IAAIf,KACX,IAED,gCACE,oBAAIb,MAAO,CAAE8B,UAAW,QAAxB,2BAEA,cAAC,EAAD,CAAOvB,UAAU,MAAMM,UAAWA,QCjBzBkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBJ,MAAK,YAAkD,IAA/CK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASC,eAAe,SAM1BoB,M","file":"static/js/main.dc1a7d06.chunk.js","sourcesContent":["import moment from \"moment\";\nconst checkMonths = (tableData) => {\n  const threeMonthsAgo = moment().subtract(3, \"months\");\n  const threeMonthsRange = tableData.transactions.filter((transaction) => {\n    const transactionDate = new Date(transaction.date);\n\n    return transactionDate > threeMonthsAgo._d;\n  });\n\n  return threeMonthsRange;\n};\n\nexport default checkMonths;\n","const formatData = (finalUsers) => {\n  let finalArr = [];\n  for (let each in finalUsers) {\n    finalArr.push({\n      name: finalUsers[each].name,\n      id: each,\n      data: finalUsers[each],\n    });\n  }\n\n  return finalArr;\n};\n\nexport default formatData;\n","const tableData = {\n  transactions: [\n    { name: \"John\", id: 1, date: \"2022-11-21\", amountSpent: 120 },\n    { name: \"John\", id: 1, date: \"2022-8-21\", amountSpent: 42 },\n    { name: \"John\", id: 1, date: \"2022-10-21\", amountSpent: 190 },\n    { name: \"Mark\", id: 2, date: \"2020-10-12\", amountSpent: 100 },\n    { name: \"Mark\", id: 2, date: \"2022-9-21\", amountSpent: 100 },\n    { name: \"Mark\", id: 2, date: \"2022-11-4\", amountSpent: 111 },\n    { name: \"Macy\", id: 3, date: \"2022-11-8\", amountSpent: 75 },\n    { name: \"Macy\", id: 3, date: \"2022-11-10\", amountSpent: 32 },\n    { name: \"Macy\", id: 3, date: \"2022-03-21\", amountSpent: 175 },\n    { name: \"Macy\", id: 3, date: \"2022-11-11\", amountSpent: 12 },\n    { name: \"Macy\", id: 3, date: \"2022-11-04\", amountSpent: 64 },\n    { name: \"Eric\", id: 4, date: \"2022-12-01\", amountSpent: 56 },\n    { name: \"Eric\", id: 4, date: \"2022-12-2\", amountSpent: 48 },\n    { name: \"Eric\", id: 4, date: \"2022-8-21\", amountSpent: 120 },\n    { name: \"Dave\", id: 5, date: \"2022-9-21\", amountSpent: 125.33 },\n    { name: \"Dave\", id: 5, date: \"2022-9-31\", amountSpent: 48 },\n    { name: \"Dave\", id: 5, date: \"2022-11-20\", amountSpent: 63 },\n    { name: \"Dave\", id: 5, date: \"2022-11-26\", amountSpent: 72 },\n    { name: \"Ben\", id: 6, date: \"2022-10-31\", amountSpent: 24 },\n    { name: \"Ben\", id: 6, date: \"2022-09-17\", amountSpent: 72 },\n    { name: \"Ben\", id: 6, date: \"2022-11-21\", amountSpent: 15 },\n    { name: \"Sam\", id: 7, date: \"2022-09-10\", amountSpent: 120 },\n  ],\n};\n\nexport default tableData;\n","const pointCalculator = (trans) => {\n  let points = 0;\n  if (trans > 50 && trans < 100) {\n    points += trans - 50;\n  } else if (trans > 100) {\n    points = (trans - 100) * 2 + 50;\n  } else {\n    return 0;\n  }\n\n  return Math.floor(points);\n};\nexport default pointCalculator;\n","import pointCalculator from \"../pointCalculator/pointCalculator.js\";\n\nconst addTransactions = (threeMonths) => {\n  const months = [\n    \"January\",\n    \"Feburary\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  let finalUsers = {};\n  threeMonths.forEach((transaction) => {\n    transaction[\"points\"] = pointCalculator(transaction.amountSpent);\n    let month = transaction.date.split(\"-\")[1];\n    let id = transaction.id;\n\n    if (finalUsers[id] !== undefined) {\n      finalUsers[id].transactions.push({\n        month: months[month - 1],\n        points: transaction.points,\n      });\n      finalUsers[id].totalPoints += transaction.points;\n      finalUsers[id].total.push(transaction);\n    } else {\n      finalUsers[transaction.id] = {\n        name: transaction.name,\n        totalPoints: transaction.points,\n        transactions: [\n          { month: months[month - 1], points: transaction.points },\n        ],\n        total: [transaction],\n      };\n    }\n  });\n\n  return finalUsers;\n};\n\nexport default addTransactions;\n","const monthlyPoints = (transactionHistory) => {\n  let monthlyCount = {};\n  transactionHistory.data.transactions.forEach((month) => {\n    if (monthlyCount[month.month] === undefined) {\n      monthlyCount[month.month] = month.points;\n    } else {\n      monthlyCount[month.month] += month.points;\n    }\n  });\n\n  return Object.keys(monthlyCount).map((month, i) => {\n    return (\n      <div\n        style={{ border: \"1px solid\", margin: \"3px\", padding: \"2px\" }}\n      >{`${month}: ${monthlyCount[month]} points`}</div>\n    );\n  });\n};\n\nexport default monthlyPoints;\n","import { createPortal } from \"react-dom\";\nimport \"./modal.css\";\nimport monthlyPoints from \"./monthlyPoints/monthlyPoints.js\";\nconst Modal = ({ transactionHistory, style, setStyle }) => {\n  const handleClose = () => {\n    setStyle(\"hidden\");\n  };\n\n  if (style === \"hidden\") {\n    return null;\n  }\n\n  const months = monthlyPoints(transactionHistory);\n\n  return createPortal(\n    <>\n      <div className=\"back\"></div>\n      <div className={style}>\n        <div className=\"content\">\n          <div className=\"header\">\n            <h4 className=\"title\">{transactionHistory.name}</h4>\n          </div>\n          <div className=\"body\">Months: {months}</div>\n          <h3>All Transactions</h3>\n          {transactionHistory.data.total.map((each, key) => {\n            return (\n              <div\n                key={key}\n                className=\"body\"\n              >{`Amount: $${each.amountSpent},  Day: ${each.date}, Points: ${each.points}`}</div>\n            );\n          })}\n\n          <div className=\"footer\">\n            <button className=\"button \" onClick={() => handleClose()}>\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </>,\n    document.getElementById(\"portal\")\n  );\n};\n\nexport default Modal;\n","import { useState } from \"react\";\nimport Modal from \"../modal/Modal\";\nimport \"../rows/rows.css\";\nconst Rows = ({ customers }) => {\n  const [transactionHistory, setTransactionHistory] = useState(null);\n  const [style, setStyle] = useState(\"hidden\");\n\n  const openModal = (customer) => {\n    setTransactionHistory(customer);\n\n    setStyle(\"modal\");\n  };\n  return (\n    <tbody>\n      <Modal\n        setStyle={setStyle}\n        style={style}\n        transactionHistory={transactionHistory}\n      ></Modal>\n      {customers.map((customer) => {\n        return (\n          <tr key={customer.id} className=\"rows\">\n            <td className=\"rows\">{customer.name}</td>\n            <td className=\"rows\">\n              {customer.data.transactions.length} {\"  \"}\n              <button onClick={() => openModal(customer)}> Show All </button>\n            </td>\n\n            <td className=\"rows show\">{customer.data.totalPoints}</td>\n          </tr>\n        );\n      })}\n    </tbody>\n  );\n};\n\nexport default Rows;\n","import Rows from \"../rows/Rows\";\nimport \"../table/table.css\";\nconst Table = ({ customers }) => {\n  return (\n    <>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th className=\"columns\">Name</th>\n\n            <th className=\"columns\">Number of Transactions</th>\n            <th className=\"columns\"> Total Points</th>\n          </tr>\n        </thead>\n\n        <Rows customers={customers}></Rows>\n      </table>{\" \"}\n    </>\n  );\n};\n\nexport default Table;\n","const getCustomers = (tableData) => {\n  return new Promise((res, rej) => {\n    res(tableData);\n  });\n};\nexport default getCustomers;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nimport checkMonths from \"../src/state-functions/checkMonths/checkMonths\";\nimport formatData from \"./state-functions/formatData/formatData\";\nimport tableData from \"../src/data/customers.js\";\nimport addTransactions from \"../src/state-functions/addTransaction/addTransactions.js\";\nimport Table from \"../src/components/table/Table.jsx\";\nimport getCustomers from \"../src/state-functions/getCustomers/getCustomers.js\";\nfunction App() {\n  const [customers, setCustomers] = useState([]);\n\n  useEffect(() => {\n    console.log(\"hey\");\n    //simulating API call------need to update dates\n    getCustomers(tableData)\n      .then((res) => checkMonths(res))\n      .then((threeMonths) => addTransactions(threeMonths))\n      .then((finalUsers) => {\n        const data = formatData(finalUsers);\n\n        setCustomers(data);\n      });\n    console.log(customers);\n  }, []);\n  return (\n    <div>\n      <h1 style={{ textAlign: \"left\" }}>Retail Points</h1>\n\n      <Table className=\"top\" customers={customers}></Table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}